{
  "swagger": "2.0",
  "tags": [
    { "name": "ActionListIntegrationService" },
    { "name": "EndUserIntegrationService" },
    { "name": "SmartCardIntegrationService" },
    { "name": "WebPortalIntegrationService" },
    { "name": "AccountIntegrationService" },
    { "name": "EchoTransactionIntegrationService" },
    { "name": "GateIntegrationService" },
    { "name": "GateTransactionIntegrationService" },
    { "name": "MobileTicketingMachineIntegrationService" },
    { "name": "MobileTicketingMachineTransactionIntegrationService" },
    { "name": "PosIntegrationService" },
    { "name": "PosTransactionIntegrationService" },
    { "name": "ReasonIntegrationService" },
    { "name": "FinancialSummaryIntegrationService" },
    { "name": "ValidatorIntegrationService" },
    { "name": "ValidatorTransactionIntegrationService" },
    { "name": "VehicleTicketingMachineIntegrationService" },
    { "name": "VehicleTicketingMachineTransactionIntegrationService" },
    { "name": "DeviceIntegrationService" },
    { "name": "EmployeeIntegrationService" },
    { "name": "FineIntegrationService" },
    { "name": "InspectionIntegrationService" },
    { "name": "InspectionV2IntegrationService" },
    { "name": "DanBlacklistIntegrationService" },
    { "name": "TngBlacklistIntegrationService" }
  ],
  "paths": {
    "/afc/integration/actionlist/items/CardUID/{id}": {
      "get": {
        "tags": [ "ActionListIntegrationService" ],
        "operationId": "getActionListByCardIdWP",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": { "$ref": "#/definitions/CardActionListDto" }
          }
        }
      }
    },
    "/afc/integration/actionlist/items/DeviceID/{externalId}": {
      "get": {
        "tags": [ "ActionListIntegrationService" ],
        "summary": "Get action list for specific device",
        "description": "## Response details\n\n ----------------------\n### deviceActions\ncan contain children tags:\n\n* blockDeviceOperation, then the type is [BlockDeviceOperationDto](#model-BlockDeviceOperationDto)\n * unblockDeviceOperation, then the type is [UnblockDeviceOperationDto](#model-UnblockDeviceOperationDto)\n\n",
        "operationId": "getActionListByDeviceId",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DeviceActionListDto" }
          }
        }
      }
    },
    "/afc/integration/actionlist/items/SeqNum/{seqNum}": {
      "get": {
        "tags": [ "ActionListIntegrationService" ],
        "summary": "Get actions with a sequence number greater than the one you give",
        "description": "## Response details\n\n ----------------------\n### deviceActions\ncan contain children tags:\n\n* blockDeviceOperation, then the type is [BlockDeviceOperationDto](#model-BlockDeviceOperationDto)\n * unblockDeviceOperation, then the type is [UnblockDeviceOperationDto](#model-UnblockDeviceOperationDto)\n\n",
        "operationId": "getActionListFromSeqNum",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "seqNum",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DeviceActionListDto" }
          }
        }
      }
    },
    "/afc/integration/actionlist/purge": {
      "get": {
        "tags": [ "ActionListIntegrationService" ],
        "summary": "Purge current action lists",
        "description": "",
        "operationId": "purgeOldActionLists",
        "produces": [ "text/plain" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/afc/integration/actionlist/all": {
      "get": {
        "tags": [ "ActionListIntegrationService" ],
        "summary": "Get action list",
        "description": "## Response details\n\n ----------------------\n### cardActions\ncan contain children tags:\n\n* cardImmediateOperation, then the type is [CardImmediateOperationDto](#model-CardImmediateOperationDto)\n * cardWaitingOperation, then the type is [CardWaitingOperationDto](#model-CardWaitingOperationDto)\n\n### deviceActions\ncan contain children tags:\n\n * blockDeviceOperation, then the type is [BlockDeviceOperationDto](#model-BlockDeviceOperationDto)\n * unblockDeviceOperation, then the type is [UnblockDeviceOperationDto](#model-UnblockDeviceOperationDto)",
        "operationId": "getActionList",
        "produces": [ "application/xml" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ActionListDto" }
          }
        }
      }
    },
    "/afc/integration/enduser/{endUserId}/cards/uid/{uid}": {
      "post": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Deregister card from the end user by card UId. (AFC.END_USER_INTEGRATION.DEREGISTER)",
        "description": "",
        "operationId": "deregisterCardByUId",
        "parameters": [
          {
            "name": "endUserId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "403": { "description": "Smart Card couldn't be found by UID, or End User couldn't be found by Id" } }
      },
      "put": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Register card to the end user by card UID. (AFC.END_USER_INTEGRATION.REGISTER)",
        "description": "",
        "operationId": "registerCardByUId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "endUserId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "403": { "description": "Smart Card couldn't be found by UId or End User couldn't be found by Id, or Registration unsuccessful: This smart card is already registered" } }
      }
    },
    "/afc/integration/enduser/{endUserId}/cards/printed-id/{printedId}": {
      "post": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Deregister card from the end user by card printed Id. (AFC.END_USER_INTEGRATION.DEREGISTER)",
        "description": "",
        "operationId": "deregisterCardByPrintedId",
        "parameters": [
          {
            "name": "endUserId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "printedId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "403": { "description": "Smart Card couldn't be found by by card printed Id, or End User couldn't be found by Id" } }
      },
      "put": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Register card to the end user by card printed Id. (AFC.END_USER_INTEGRATION.REGISTER)",
        "description": "",
        "operationId": "registerCardByPrintedId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "endUserId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "printedId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "403": { "description": "Smart Card couldn't be found by Printed ID or End User couldn't be found by Id, or Registration unsuccessful: This smart card is already registered" } }
      }
    },
    "/afc/integration/enduser/email/{id}": {
      "get": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Get e-mail address of end user by card Uid. (AFC.END_USER_INTEGRATION.VIEW)",
        "description": "#### The actual email is contained as a string inside the email tag in the response.",
        "operationId": "getEmailForCardId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EmailEndUserDto" }
          },
          "403": { "description": "Smart Card or End user couldn't be found by UID" }
        }
      }
    },
    "/afc/integration/enduser/{id}": {
      "delete": {
        "tags": [ "EndUserIntegrationService" ],
        "summary": "Delete end user. (AFC.END_USER_INTEGRATION.DELETE)",
        "description": "",
        "operationId": "deactivate",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/printed-id/{id}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get card by Card Printed Id",
        "description": "The contracts for card are only returned if not expired.",
        "operationId": "getCardByPrintedID",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardWPDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/printed-id/{id}/autoload": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get autoload settings for card by card printed id",
        "description": "",
        "operationId": "getAutoloadByPrintedId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AutoloadDto" }
          }
        }
      },
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Update autoload settings for card by card printed id",
        "description": "",
        "operationId": "updateAutoloadByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AutoloadDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/uid/{id}/autoload": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get autoload settings for card by card UId",
        "description": "",
        "operationId": "getAutoloadByUId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AutoloadDto" }
          }
        }
      },
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Update autoload settings for card by card UId",
        "description": "",
        "operationId": "updateAutoloadByUId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/AutoloadDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{cardHolderId}/smartcard/{smartCardUId}": {
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Register Smart Card with Card Holder",
        "description": "",
        "operationId": "registerCardHolderToSmartCard",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "cardHolderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartCardUId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{cardHolderId}/photo/{filetype}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Upload Card Holder Photo",
        "description": "",
        "operationId": "uploadCardHolderPhoto",
        "consumes": [ "multipart/form-data" ],
        "parameters": [
          {
            "name": "cardHolderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filetype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{cardHolderId}/photo": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get Card Holder Photo",
        "description": "",
        "operationId": "getCardHolderPhoto",
        "produces": [ "application/octet-stream" ],
        "parameters": [
          {
            "name": "cardHolderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{cardHolderId}/proof/{filetype}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Upload Card Holder Identity Proof",
        "description": "",
        "operationId": "uploadCardHolderIdentityProof",
        "consumes": [ "multipart/form-data" ],
        "parameters": [
          {
            "name": "cardHolderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filetype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{cardHolderId}/proof": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get Card Holder Identity Proof (download file)",
        "description": "",
        "operationId": "getCardHolderIdentityProof",
        "produces": [ "application/octet-stream" ],
        "parameters": [
          {
            "name": "cardHolderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/smartcard/{smartCardUId}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get Card Holder by Smart Card UId",
        "description": "",
        "operationId": "getCardHolderBySmartCardUId",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "smartCardUId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardHolderDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/recreate/{smartCardUIdOld}/{smartCardUIdNew}": {
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Recreate Card in case of damaged Smart Card or lost Smart Card",
        "description": "",
        "operationId": "recreateSmartCardToCardHolder",
        "parameters": [
          {
            "name": "smartCardUIdOld",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smartCardUIdNew",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardHolderDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/card-block-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card block action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardBlockActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/card-block-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card block action is performed on an external system like Web Portal or POS. Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardBlockActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/card-unblock-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card unblock action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardUnblockActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/card-unblock-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card unblock action is performed on an external system like Web Portal or POS. Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardUnblockActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/recharge-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a recharge action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "rechargeActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardRechargeActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/recharge-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when an recharge is performed on an external system like Web Portal or POS. Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "rechargeActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardRechargeActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/add-stored-rides-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when stored rides are added on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardAddStoredRidesActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddStoredRidesActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/add-period-pass-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a period pass is added on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addPeriodPassActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddPeriodPassActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/add-period-pass-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a period pass is added on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addPeriodPassActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddPeriodPassActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/contract-block-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a contract block action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addContractBlockActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardContractBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/replace-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card replace action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardReplaceActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/replace-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a card replace action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardReplaceActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardContractBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{id}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get Card Holder information by id",
        "description": "",
        "operationId": "getCardHolder",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardHolderDto" }
          }
        }
      },
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Update card holder information",
        "description": "",
        "operationId": "updateCardHolder",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CreateCardHolderDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get list of all cards",
        "description": "",
        "operationId": "getAllCards",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardWPDto" }
            }
          }
        }
      }
    },
    "/afc/integration/smartcard/uid/{id}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get card by UID",
        "description": "The contracts for card are only returned if not expired.",
        "operationId": "getCardByUID",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardWPDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/cardholder": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Create card holder information",
        "description": "",
        "operationId": "createCardHolder",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CreateCardHolderDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardHolderDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/{idOld}/replace/{idNew}": {
      "put": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Initiate a card replacement",
        "description": "Initiate a card replacement. An action will be created for the action list. The card will be initialized on next tap. The contents will be populated based on the action created here and contents of the existing card. An Issuing transaction should be received as a consequence",
        "operationId": "replaceCard",
        "parameters": [
          {
            "name": "idOld",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "idNew",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/cardholder/{firstName}/{lastName}/{dayOfBirth}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Get Card Holder information by first name, last name and day of birth (format type: yyyy-MM-dd)",
        "description": "",
        "operationId": "getCardHolderByProvidedIdentification",
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "name": "firstName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dayOfBirth",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardHolderDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/replaceable/{email}": {
      "get": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Gets a list of cards eligible for replacement for warehouse POS",
        "description": "",
        "operationId": "getUserCardsEligibleForReplacement",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CardReplacementListDto" }
          }
        }
      }
    },
    "/afc/integration/smartcard/add-epurse-contract-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when an epurse contract is added on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardAddEpurseContractActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddEpurseContractActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/add-epurse-contract-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when an epurse contract is added on an external system like Web Portal or POS. Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardAddEpurseContractActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddEpurseContractActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/add-stored-rides-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when stored rides are added on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardAddStoredRidesActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardAddStoredRidesActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/contract-block-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a contract block action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardContractBlockActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardContractBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/contract-unblock-action/uid/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a contract unblock action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices. (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardContractUnblockActionByUid",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardContractBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/smartcard/contract-unblock-action/printed-id/{id}": {
      "post": {
        "tags": [ "SmartCardIntegrationService" ],
        "summary": "Used when a contract unblock action is performed on an external system like Web Portal or POS.Should create an action for the action list that is then distributed to other devices (AFC.SMARTCARD_INTEGRATION.ADD_ACTION)",
        "description": "",
        "operationId": "addCardContractUnblockActionByPrintedId",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/SmartCardContractBlockUnblockActionDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/webportal/uid/{uid}/card-purchase": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get card history usage by UID. (AFC.WEB_PORTAL_INTEGRATION.CARD_PURCHASE_VIEW)",
        "description": "",
        "operationId": "getCardPurchaseByUid",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PurchaseHistoryDto" }
            }
          }
        }
      }
    },
    "/afc/integration/webportal/printed-id/{printedId}/card-purchase": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get card history usage by Printed ID. (AFC.WEB_PORTAL_INTEGRATION.CARD_PURCHASE_VIEW)",
        "description": "",
        "operationId": "getCardPurchaseByPrintedId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "printedId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PurchaseHistoryDto" }
            }
          }
        }
      }
    },
    "/afc/integration/webportal/uid/{uid}/card-ride": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get card ride history by UID. The default history length is 7 days. (AFC.WEB_PORTAL_INTEGRATION.CARD_RIDE_HISTORY_VIEW)",
        "description": "",
        "operationId": "getCardRideHistoryByUid",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SmartCardRideDto" }
            }
          }
        }
      }
    },
    "/afc/integration/webportal/printed-id/{printedId}/card-ride": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get card ride history by Printed ID. The default history length is 7 days. (AFC.WEB_PORTAL_INTEGRATION.CARD_RIDE_HISTORY_VIEW)",
        "description": "",
        "operationId": "getCardRideHistoryByPrintedId",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "printedId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SmartCardRideDto" }
            }
          }
        }
      }
    },
    "/afc/integration/webportal/block-reason": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get card block reasons codes and their descriptions. (AFC.WEB_PORTAL_INTEGRATION.CARDBLOCKREASONS_VIEW)",
        "description": "",
        "operationId": "getCardBlockReasons",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardBlockReasonDto" }
            }
          }
        }
      }
    },
    "/afc/integration/webportal/autoload/pending-stored-value": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get list of cards with stored value due for reload (current value below * threshold. Card list contains cardUid and current storedValue in cents. (AFC.WEB_PORTAL_INTEGRATION.AUTOLOAD_STORED_VALUES_VIEW)",
        "description": "",
        "operationId": "getAutoloadStoredValues",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AutoLoadListStoredValueDto" }
          }
        }
      }
    },
    "/afc/integration/webportal/autoload/pending-period-pass": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get list of cards with period pass due for reload (still valid for less than X days). Card list contains cardUid, contractId, instanceId and expirationDate of period pass due for renewal. (AFC.WEB_PORTAL_INTEGRATION.AUTOLOAD_CARD_LIST_PERIOD_PASS_VIEW)",
        "description": "",
        "operationId": "getAutoLoadListPeriodPass",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AutoLoadListPeriodPassDto" }
          }
        }
      }
    },
    "/afc/integration/webportal/card-cost": {
      "get": {
        "tags": [ "WebPortalIntegrationService" ],
        "summary": "Get price in cents for a new card and a replacement card. This is cost of an empty card without a product added. (AFC.WEB_PORTAL_INTEGRATION.CARD_COST_VIEW)",
        "description": "",
        "operationId": "getCardCost",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardCostDto" }
            }
          }
        }
      }
    },
    "/afc/integration/account": {
      "post": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Create new account. Use the id returned by this method on all other service calls. (AFC.ACCOUNT_INTEGRATION.ADD)",
        "description": "",
        "operationId": "add",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CreateAccountDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AccountDto" }
          }
        }
      }
    },
    "/afc/integration/account/register/{id}": {
      "post": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Create new account and register/link account to the account owner. Id is owner account id. (AFC.ACCOUNT_INTEGRATION.REGISTER)",
        "description": "",
        "operationId": "register",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CreateAccountDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AccountDto" }
          },
          "403": { "description": "Account with id could't be found." }
        }
      }
    },
    "/afc/integration/account/{id}": {
      "put": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Update account information. (AFC.ACCOUNT_INTEGRATION.EDIT)",
        "description": "",
        "operationId": "update",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/UpdateAccountDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AccountDto" }
          },
          "403": { "description": "Account with id could't be found." }
        }
      },
      "delete": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Delete account by account id. (AFC.ACCOUNT_INTEGRATION.DELETE)",
        "description": "",
        "operationId": "deactivate_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "403": { "description": "Account with id could't be found or it's already deactivated." } }
      }
    },
    "/afc/integration/account/email-address/{email}": {
      "get": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Get account by account e-mail address. (AFC.ACCOUNT_INTEGRATION.VIEW)",
        "description": "",
        "operationId": "getByEmailAddress",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AccountDto" }
          },
          "403": { "description": "Account with e-mail address could't be found." }
        }
      }
    },
    "/afc/integration/account/linked/{id}": {
      "get": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Get linked accounts by owner account id. (AFC.ACCOUNT_INTEGRATION.VIEW)",
        "description": "",
        "operationId": "getLinkedAccounts",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AccountDto" }
            }
          },
          "403": { "description": "Account with id could't be found." }
        }
      }
    },
    "/afc/integration/account/{id}/proof/{fileType}": {
      "post": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Upload account identity proof. (AFC.ACCOUNT_INTEGRATION.ADD_IDENTITY_PROOF)",
        "description": "",
        "operationId": "uploadIdentityProof",
        "consumes": [ "multipart/form-data" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fileType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          }
        ],
        "responses": { "403": { "description": "Account with id could't be found." } }
      }
    },
    "/afc/integration/account/{id}/photo": {
      "get": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Get account photo. (AFC.ACCOUNT_INTEGRATION.VIEW)",
        "description": "",
        "operationId": "getPhoto",
        "produces": [ "application/octet-stream" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "403": { "description": "Account with id could't be found." },
          "404": { "description": "Account is without photo file." }
        }
      }
    },
    "/afc/integration/account/phone-number/{phoneNumber}": {
      "get": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Get account by account phone number. (AFC.ACCOUNT_INTEGRATION.VIEW)",
        "description": "",
        "operationId": "getByPhoneNumber",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AccountDto" }
          },
          "403": { "description": "Account with phone number could't be found." }
        }
      }
    },
    "/afc/integration/account/{id}/photo/{fileType}": {
      "post": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Upload account photo. (AFC.ACCOUNT_INTEGRATION.ADD_PHOTO)",
        "description": "",
        "operationId": "uploadPhoto",
        "consumes": [ "multipart/form-data" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fileType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/MultipartBody" }
          }
        ],
        "responses": { "403": { "description": "Account with id could't be found." } }
      }
    },
    "/afc/integration/account/{id}/proof": {
      "get": {
        "tags": [ "AccountIntegrationService" ],
        "summary": "Get account identity proof (download file). (AFC.ACCOUNT_INTEGRATION.VIEW)",
        "description": "",
        "operationId": "getIdentityProof",
        "produces": [ "application/octet-stream" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": { "403": { "description": "Account with id could't be found." } }
      }
    },
    "/afc/integration/echo/transaction/upload": {
      "post": {
        "tags": [ "EchoTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/echo/transaction/checkStatus": {
      "post": {
        "tags": [ "EchoTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/gate/distribution/download/{distVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download distribution",
        "description": "",
        "operationId": "downloadDistribution",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "distVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/distribution/status": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Report distribution upgrade status",
        "description": "",
        "operationId": "reportDistributionInstallStatus",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ReportDistributionInstallStatusDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/actionlist/{lastMasterVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download action list file",
        "description": "",
        "operationId": "downloadActionList",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "lastMasterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/tng-blocked-smart-list/{currentVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download blocked smart card list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedSmartList",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/assignments": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Get device assignments",
        "description": "",
        "operationId": "getDeviceAssignments",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WaysideAssignmentDto" }
          }
        }
      }
    },
    "/afc/integration/gate/heartbeat": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Send heartbeat message",
        "description": "### The tng subtag only applies to customers having the TNG subsystem.\n\n-----------\nTNG specific:\nYou can download the TNG files using the various tng- endpoints on the service for your device, except for tngSmartCardBlockActionListMasterFileUrl which also offers you a direct link to download the smart card action list block master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file.\n-------\n Details are left empty for this device type.",
        "operationId": "heartbeat",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/HeartbeatDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HeartbeatResponseDto" }
          }
        }
      }
    },
    "/afc/integration/gate/tng-blocked-device-list/{currentVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download blocked device list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedDeviceList",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/tng-smart-card-block-action-list/{currentVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download smart card block action list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardBlockAction",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/tng-valid-service-provider-list/{currentVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngValidServiceProviderList",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/tng-valid-smart-card-manufacturing-id-range/{currentVersion}": {
      "post": {
        "tags": [ "GateIntegrationService" ],
        "summary": "Download smart card manufacturing id range list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardManufacturingIdRangeList",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/gate/transaction/upload": {
      "post": {
        "tags": [ "GateTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload_1",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/gate/transaction/checkStatus": {
      "post": {
        "tags": [ "GateTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/mobileticketingmachine/distribution/download/{distVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download distribution",
        "description": "",
        "operationId": "downloadDistribution_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "distVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/distribution/status": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Report distribution upgrade status",
        "description": "",
        "operationId": "reportDistributionInstallStatus_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ReportDistributionInstallStatusDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/actionlist/{lastMasterVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download action list file",
        "description": "",
        "operationId": "downloadActionList_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "lastMasterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/tng-blocked-smart-list/{currentVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download blocked smart card list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedSmartList_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/assignments": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Get device assignments",
        "description": "",
        "operationId": "getDeviceAssignments_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WaysideAssignmentDto" }
          }
        }
      }
    },
    "/afc/integration/mobileticketingmachine/heartbeat": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Send heartbeat message",
        "description": "### The tng subtag only applies to customers having the TNG subsystem.\n\n-----------\nTNG specific:\nYou can download the TNG files using the various tng- endpoints on the service for your device, except for tngSmartCardBlockActionListMasterFileUrl which also offers you a direct link to download the smart card action list block master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file.\n-------\n Details for this device type can contain [MtmHeartbeatDetailsDto](#model-MtmHeartbeatDetailsDto).",
        "operationId": "heartbeat_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/HeartbeatDtoMtmHeartbeatDetailsDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HeartbeatResponseDto" }
          }
        }
      }
    },
    "/afc/integration/mobileticketingmachine/tng-blocked-device-list/{currentVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download blocked device list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedDeviceList_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/tng-smart-card-block-action-list/{currentVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download smart card block action list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardBlockAction_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/tng-valid-service-provider-list/{currentVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngValidServiceProviderList_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/tng-valid-smart-card-manufacturing-id-range/{currentVersion}": {
      "post": {
        "tags": [ "MobileTicketingMachineIntegrationService" ],
        "summary": "Download smart card manufacturing id range list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardManufacturingIdRangeList_1",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/mobileticketingmachine/transaction/upload": {
      "post": {
        "tags": [ "MobileTicketingMachineTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload_2",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/mobileticketingmachine/transaction/checkStatus": {
      "post": {
        "tags": [ "MobileTicketingMachineTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/pos/distribution/download/{distVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download distribution",
        "description": "",
        "operationId": "downloadDistribution_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "distVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/distribution/status": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Report distribution upgrade status",
        "description": "",
        "operationId": "reportDistributionInstallStatus_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ReportDistributionInstallStatusDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/actionlist/{lastMasterVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download action list file",
        "description": "",
        "operationId": "downloadActionList_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "lastMasterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/tng-blocked-smart-list/{currentVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download blocked smartcard list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedSmartList_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/assignments": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Get device assignments",
        "description": "",
        "operationId": "getDeviceAssignments_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WaysideAssignmentDto" }
          }
        }
      }
    },
    "/afc/integration/pos/heartbeat": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Send heartbeat message",
        "description": "### The tng subtag only applies to customers having the TNG subsystem.\n\n-----------\nTNG specific:\nYou can download the TNG files using the various tng- endpoints on the service for your device, except for tngSmartCardBlockActionListMasterFileUrl which also offers you a direct link to download the smart card action list block master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file.\n-------\n Details are left empty for this device type.",
        "operationId": "heartbeat_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/HeartbeatDtoVoid" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HeartbeatResponseDto" }
          }
        }
      }
    },
    "/afc/integration/pos/tng-blocked-device-list/{currentVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download blocked device list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedDeviceList_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/tng-smart-card-block-action-list/{currentVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download smart card block action list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardBlockAction_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/tng-valid-service-provider-list/{currentVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngValidServiceProviderList_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/tng-valid-smart-card-manufacturing-id-range/{currentVersion}": {
      "post": {
        "tags": [ "PosIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardManufacturingIdRangeList_2",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/pos/transaction/upload": {
      "post": {
        "tags": [ "PosTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload_3",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/pos/transaction/debug/errors": {
      "get": {
        "tags": [ "PosTransactionIntegrationService" ],
        "summary": "Get transaction errors",
        "description": "",
        "operationId": "getTransactionErrors",
        "produces": [ "application/xml" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionErrorListDto" }
          }
        }
      }
    },
    "/afc/integration/pos/transaction/checkStatus": {
      "post": {
        "tags": [ "PosTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/reasons/reasonConfiguration": {
      "get": {
        "tags": [ "ReasonIntegrationService" ],
        "summary": "Fetch reasons configuration",
        "description": "",
        "operationId": "getReasonConfiguration",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ReasonConfigurationIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/reasons/reasonConfigurationLastChanged": {
      "get": {
        "tags": [ "ReasonIntegrationService" ],
        "summary": "Fetch reasons configuration",
        "description": "",
        "operationId": "getReasonConfigurationLastChanged",
        "produces": [ "application/json" ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "/afc/integration/summary_transactions/employeeId/{employeeId}/date/{dateStr}": {
      "get": {
        "tags": [ "FinancialSummaryIntegrationService" ],
        "summary": "Fetch financial summary data for one employee and one day. The date must be given in the yyyymmdd format, for instance 20181016, in the customer timezone",
        "description": "",
        "operationId": "getSummaryTransactions",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dateStr",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FinancialSummaryDto" }
            }
          }
        }
      }
    },
    "/afc/integration/validator/distribution/download/{distVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download distribution",
        "description": "",
        "operationId": "downloadDistribution_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "distVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/distribution/status": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Report distribution upgrade status",
        "description": "",
        "operationId": "reportDistributionInstallStatus_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ReportDistributionInstallStatusDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/actionlist/{lastMasterVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download action list file",
        "description": "",
        "operationId": "downloadActionList_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "lastMasterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/tng-blocked-smart-list/{currentVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download blocked smartcard list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedSmartList_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/assignments": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Get device assignments",
        "description": "",
        "operationId": "getDeviceAssignments_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/OnBoardAssignmentDto" }
          }
        }
      }
    },
    "/afc/integration/validator/heartbeat": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Send heartbeat message",
        "description": "### The tng subtag only applies to customers having the TNG subsystem.\n\n-----------\nTNG specific:\nYou can download the TNG files using the various tng- endpoints on the service for your device, except for tngSmartCardBlockActionListMasterFileUrl which also offers you a direct link to download the smart card action list block master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file.\n-------\n Details are left empty for this device type.",
        "operationId": "heartbeat_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/HeartbeatDtoVoid" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HeartbeatResponseDto" }
          }
        }
      }
    },
    "/afc/integration/validator/tng-blocked-device-list/{currentVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download blocked device list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedDeviceList_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/tng-smart-card-block-action-list/{currentVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download smart card block action list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardBlockAction_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/tng-valid-service-provider-list/{currentVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngValidServiceProviderList_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/tng-valid-smart-card-manufacturing-id-range/{currentVersion}": {
      "post": {
        "tags": [ "ValidatorIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardManufacturingIdRangeList_3",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/validator/transaction/upload": {
      "post": {
        "tags": [ "ValidatorTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload_4",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/validator/transaction/checkStatus": {
      "post": {
        "tags": [ "ValidatorTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/vehicleticketingmachine/distribution/download/{distVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download distribution",
        "description": "",
        "operationId": "downloadDistribution_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "distVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/distribution/status": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Report distribution upgrade status",
        "description": "",
        "operationId": "reportDistributionInstallStatus_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ReportDistributionInstallStatusDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/actionlist/{lastMasterVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download action list file",
        "description": "",
        "operationId": "downloadActionList_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "lastMasterVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/tng-blocked-smart-list/{currentVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download blocked smartcard list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedSmartList_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/assignments": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Get device assignments",
        "description": "",
        "operationId": "getDeviceAssignments_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/OnBoardAssignmentDto" }
          }
        }
      }
    },
    "/afc/integration/vehicleticketingmachine/heartbeat": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Send heartbeat message",
        "description": "### The tng subtag only applies to customers having the TNG subsystem.\n\n-----------\nTNG specific:\nYou can download the TNG files using the various tng- endpoints on the service for your device, except for tngSmartCardBlockActionListMasterFileUrl which also offers you a direct link to download the smart card action list block master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file.\n-------\n Details are left empty for this device type.",
        "operationId": "heartbeat_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/HeartbeatDtoVoid" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HeartbeatResponseDto" }
          }
        }
      }
    },
    "/afc/integration/vehicleticketingmachine/tng-blocked-device-list/{currentVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download blocked device list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngBlockedDeviceList_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/tng-smart-card-block-action-list/{currentVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download smart card block action list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardBlockAction_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/tng-valid-service-provider-list/{currentVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngValidServiceProviderList_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/tng-valid-smart-card-manufacturing-id-range/{currentVersion}": {
      "post": {
        "tags": [ "VehicleTicketingMachineIntegrationService" ],
        "summary": "Download valid service provider list file. The server may return a master file or a diff file, depending on which version you give. You can find out which type you got thanks to the file name: Package_ALM_* means it's a master file, Package_ALI_* means it's a diff file (intermediate)",
        "description": "",
        "operationId": "downloadTngSmartCardManufacturingIdRangeList_4",
        "consumes": [ "application/xml" ],
        "produces": [ "application/zip" ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/DeviceDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/vehicleticketingmachine/transaction/upload": {
      "post": {
        "tags": [ "VehicleTicketingMachineTransactionIntegrationService" ],
        "summary": "For uploading zipped XML transactions",
        "description": "For uploading zipped XML transactions. Each zip file gets written to disk. After writing the contents are extracted and each entry file is extracted. The upload will fail if: invalid file names, content cannot be deserialized, unzipping fails. Any failure (overall or for single file) is considered failure for the whole upload. The XML transactions themselves are zipped.\n\n\nHere are the relevant XSDs to generate them:\n\n * [Common XSD](../rest/xsd_files/CommonTransactionXmlSchema.xsd)\n * [SmartCard transactions](../rest/xsd_files/SmartCardTransactionXmlSchema.xsd)\n * [Ticket transactions](../rest/xsd_files/TicketTransactionXmlSchema.xsd)\n * [Operational transactions](../rest/xsd_files/OperationalTransactionXmlSchema.xsd)\n * [Summary transactions](../rest/xsd_files/SummaryTransactionXmlSchema.xsd)",
        "operationId": "upload_5",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "zippedXmlInputStream",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TransactionUploadResponseDto" }
          }
        }
      }
    },
    "/afc/integration/vehicleticketingmachine/transaction/checkStatus": {
      "post": {
        "tags": [ "VehicleTicketingMachineTransactionIntegrationService" ],
        "summary": "Check for transaction processing status",
        "description": "",
        "operationId": "checkStatus_5",
        "consumes": [ "application/xml" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/CheckStatusRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CheckTransactionFilesStatusResponseDto" }
          }
        }
      }
    },
    "/afc/integration/device/{deviceType}/unassign": {
      "post": {
        "tags": [ "DeviceIntegrationService" ],
        "summary": "Unassign devices from Assets (AFC.DEVICE_INTEGRATION.UNASSIGN_FROM_ASSET)",
        "description": "",
        "operationId": "unassignDevices",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "deviceType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/ListUnassignDeviceDto" }
          },
          {
            "in": "body",
            "name": "body",
            "description": "list of unassignments to perform",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UnassignDeviceDto" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UnassignDeviceResponseDto" }
            }
          }
        }
      }
    },
    "/afc/integration/employee/{type}/{id}": {
      "get": {
        "tags": [ "EmployeeIntegrationService" ],
        "summary": "Get employee details. Use the ID returned by this method on all other service calls. 404 for unknown user (AFC.EMPLOYEE_INTEGRATION.INFO)",
        "description": "",
        "operationId": "get",
        "consumes": [ "*/*" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "the type of identifier to use",
            "required": true,
            "type": "string",
            "enum": [ "ID", "SC" ]
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EmployeeInfoDto" }
          }
        }
      }
    },
    "/afc/integration/employee/login/{type}": {
      "post": {
        "tags": [ "EmployeeIntegrationService" ],
        "summary": "Check employee login & get his details. Will return 2xx on password OK. Use the ID returned by this method on all other service calls. 401 for invalid password 404 for unknown user 403 no password defined for employee 403 for locked employee login attempt 403 for too many login attempts (AFC.EMPLOYEE_INTEGRATION.LOGIN)",
        "description": "",
        "operationId": "login",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "the type of identifier to use",
            "required": true,
            "type": "string",
            "enum": [ "ID", "SC" ]
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EmployeeInfoDto" }
          }
        }
      }
    },
    "/afc/integration/employee/{deviceType}": {
      "get": {
        "tags": [ "EmployeeIntegrationService" ],
        "summary": "Get list of employees applicable for specified device type (AFC.EMPLOYEE_INTEGRATION.GET_FOR_DEVICE_TYPE)",
        "description": "",
        "operationId": "getEmployeesForDeviceType",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "deviceType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [ "VEHICLE_VALIDATOR", "VEHICLE_GATE", "VEHICLE_TICKETING_MACHINE", "VEHICLE_DRIVER_CONSOLE", "VEHICLE_VENDING_MACHINE", "STATION_GATE", "STATION_VENDING_MACHINE", "STATION_STATUS_CHECKER", "OFFICE_PERSONALIZATION_STATION", "OFFICE_POS", "MOBILE_INSPECTION_DEVICE", "MOBILE_TICKETING_MACHINE", "MOBILE_VALIDATOR", "MOBILE_PHONE", "NETWORK_WEB_PORTAL", "CENTRAL_SYSTEM", "NETWORK_MOBILE_TICKETING_PORTAL" ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/IntegrationEmployeeDto" }
            }
          }
        }
      }
    },
    "/afc/integration/employee": {
      "post": {
        "tags": [ "EmployeeIntegrationService" ],
        "summary": "Push list of employees to AFC (AFC.EMPLOYEE_INTEGRATION.EDIT)",
        "description": "",
        "operationId": "pushEmployees",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/IntegrationEmployeesDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EmployeesResponseDto" }
          }
        }
      }
    },
    "/afc/integration/employee/{id}/password": {
      "put": {
        "tags": [ "EmployeeIntegrationService" ],
        "summary": "Change employee password (AFC.EMPLOYEE_INTEGRATION.CHANGE_PASSWORD)",
        "description": "",
        "operationId": "passwordChange",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeChangePasswordIntegrationDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EmployeeInfoDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/fine/{id}/{date}": {
      "get": {
        "tags": [ "FineIntegrationService" ],
        "summary": "Get fine info (INSPECTION.INTEGRATION.GET_FINE)",
        "description": "",
        "operationId": "getFine",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/FineDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/fine/{id}/{date}/mark-paid": {
      "put": {
        "tags": [ "FineIntegrationService" ],
        "summary": "Mark fine as paid (INSPECTION.INTEGRATION.PAY_FINE)",
        "description": "",
        "operationId": "markPaid",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "paymentInfo",
            "description": "fine payment information",
            "required": true,
            "schema": { "$ref": "#/definitions/FinePaymentDto" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/afc/integration/inspection/inspector/{smartCardId}/login": {
      "post": {
        "tags": [ "InspectionIntegrationService" ],
        "summary": "Check inspector login. Will return 2xx on password OK.",
        "description": "",
        "operationId": "inspectorLogin",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "smartCardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/InspectorLoginIntegrationDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/media": {
      "post": {
        "tags": [ "InspectionIntegrationService" ],
        "summary": "Adds media upload to inspection or inspection event",
        "description": "curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"mediaFile=@2018-11-08 16_16_41-Window.png\" -F \"mediaInfo={\\\"deviceId\\\":\\\"mtm1\\\",\\\"inspectionId\\\":\\\"autoGenInsp***\\\",\\\"inspectionEventId\\\":null,\\\"mediaType\\\":\\\"image/jpeg\\\",\\\"timestamp\\\":\\\"2018-12-18T07:50:31.000Z\\\",\\\"comment\\\":null};type=application/json\" http://localhost:8080/rest/afc/integration/inspection/media",
        "operationId": "uploadMedia",
        "consumes": [ "multipart/form-data" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "mediaFile",
            "description": "binary media file",
            "required": true,
            "schema": { "$ref": "#/definitions/InputStream" }
          },
          {
            "in": "body",
            "name": "mediaInfo",
            "description": "information about the media",
            "required": true,
            "schema": { "$ref": "#/definitions/MediaUploadDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/afc/integration/inspection/inspector/{smartCardId}": {
      "get": {
        "tags": [ "InspectionIntegrationService" ],
        "summary": "Get inspector info",
        "description": "",
        "operationId": "getInspectorInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "smartCardId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/inspector/{smartCardId}/assigned-task": {
      "get": {
        "tags": [ "InspectionIntegrationService" ],
        "summary": "Get assigned tasks for inspector",
        "description": "",
        "operationId": "inspectorTasks",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "smartCardId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InspectorAssignedTasksIntegrationDto" }
            }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/inspector/{id}/summary/{date}": {
      "get": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Get daily total and executed tasks and inspections summary for inspector (INSPECTION.INTEGRATION.GET_SUMMARY)",
        "description": "",
        "operationId": "getSummary",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectionSummaryIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/inspector/{id}/password": {
      "put": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Change inspector password (INSPECTION.INTEGRATION.CHANGE_PASSWORD)",
        "description": "",
        "operationId": "inspectorPasswordChange",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/InspectorChangePasswordIntegrationDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/inspector/{id}/assignment": {
      "get": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Get assigned tasks and inspections (for current day) for inspector (INSPECTION.INTEGRATION.GET_ASSIGNMENTS)",
        "description": "",
        "operationId": "getInspectorAssignments",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorAssignmentsIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/inspector/{type}/login": {
      "post": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Check inspector login & get his details. Will return 2xx on password OK. Use the ID returned by this method on all other service calls. (INSPECTION.INTEGRATION.LOGIN)",
        "description": "",
        "operationId": "inspectorLogin_1",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "the type of identifier to use",
            "required": true,
            "type": "string",
            "enum": [ "ID", "SC" ]
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginRequestDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/media": {
      "post": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Adds media upload to inspection or inspection event (INSPECTION.INTEGRATION.UPLOAD_MEDIA)",
        "description": "curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"mediaFile=@2018-11-08 16_16_41-Window.png\" -F \"mediaInfo={\\\"deviceId\\\":\\\"mtm1\\\",\\\"inspectionId\\\":\\\"autoGenInsp***\\\",\\\"inspectionEventId\\\":null,\\\"mediaType\\\":\\\"image/jpeg\\\",\\\"timestamp\\\":\\\"2018-12-18T07:50:31.000Z\\\",\\\"comment\\\":null};type=application/json\" http://localhost:8080/rest/afc/integration/inspection/media",
        "operationId": "uploadMedia_1",
        "consumes": [ "multipart/form-data" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "mediaFile",
            "description": "binary media file",
            "required": true,
            "schema": { "$ref": "#/definitions/InputStream" }
          },
          {
            "in": "body",
            "name": "mediaInfo",
            "description": "information about the media",
            "required": true,
            "schema": { "$ref": "#/definitions/MediaUploadDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "string" }
          }
        }
      }
    },
    "/afc/integration/inspection/v2/inspector/{id}": {
      "get": {
        "tags": [ "InspectionV2IntegrationService" ],
        "summary": "Get inspector info (INSPECTION.INTEGRATION.GET_INSPECTOR_INFO)",
        "description": "",
        "operationId": "getInspectorInfo_1",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/InspectorIntegrationDto" }
          }
        }
      }
    },
    "/afc/integration/dan/blacklist": {
      "post": {
        "tags": [ "DanBlacklistIntegrationService" ],
        "summary": "Upload DAN blacklist information (AFC.DAN.MOT_BLACKLIST_IMPORT)",
        "description": "Accepts a zipped file with the DAN-proprietary format for blacklist",
        "operationId": "post",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TngBlacklistResponse" }
          }
        }
      }
    },
    "/afc/integration/tng/blacklist": {
      "post": {
        "tags": [ "TngBlacklistIntegrationService" ],
        "summary": "Upload TNG blacklist information",
        "description": "Accepts the following XSD in a zipped file: [TngBlacklist](../rest/xsd_files/TngBlacklist.xsd)",
        "operationId": "post_1",
        "consumes": [ "application/octet-stream", "application/zip" ],
        "produces": [ "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": { "$ref": "#/definitions/InputStream" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TngBlacklistResponse" }
          }
        }
      }
    }
  },
  "definitions": {
    "AddAuxiliaryDto": {
      "type": "object",
      "properties": {
        "contractID": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      },
      "xml": { "name": "addAuxiliary" }
    },
    "AddEPurseContractDto": {
      "type": "object",
      "properties": {
        "contractID": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      }
    },
    "AddPeriodPassDto": {
      "type": "object",
      "properties": {
        "contractID": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "preactivated": { "$ref": "#/definitions/PreactivatedDto" }
      },
      "xml": { "name": "addPeriodPass" }
    },
    "AddStoredRidesDto": {
      "type": "object",
      "properties": {
        "rides": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "contractID": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      },
      "xml": { "name": "addStoredRides" }
    },
    "BlockStatusDto": {
      "type": "object",
      "properties": {
        "status": { "type": "string" },
        "lastChangeTime": { "type": "string" }
      }
    },
    "CardActionDataDto1": {
      "type": "object",
      "properties": {
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "cardID": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "cardType": {
          "type": "string",
          "xml": { "attribute": true }
        }
      }
    },
    "CardActionListDto": {
      "type": "object",
      "properties": {
        "nextSequenceNumber": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "fileDateTime": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "cardActions": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": { "$ref": "#/definitions/CardWaitingOperationDto" }
        }
      },
      "xml": { "name": "actionList" }
    },
    "CardBlockDto": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      }
    },
    "CardImmediateOperationDto": {
      "allOf": [
        { "$ref": "#/definitions/CardActionDataDto1" },
        {
          "type": "object",
          "properties": {
            "alic": {
              "type": "integer",
              "format": "int32",
              "xml": { "attribute": true }
            },
            "recreateCard": { "$ref": "#/definitions/RecreateCardDto" },
            "cardBlock": { "$ref": "#/definitions/CardBlockDto" },
            "cardUnblock": { "$ref": "#/definitions/CardUnblockDto" },
            "contractBlock": { "$ref": "#/definitions/ContractBlockDto" },
            "contractUnBlock": { "$ref": "#/definitions/ContractUnblockDto" }
          },
          "xml": { "name": "cardImmediateOperation" },
          "description": "Card immediate operation"
        }
      ]
    },
    "CardUnblockDto": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      }
    },
    "CardWaitingOperationDto": {
      "allOf": [
        { "$ref": "#/definitions/CardActionDataDto1" },
        {
          "type": "object",
          "properties": {
            "alwc": {
              "type": "integer",
              "format": "int32",
              "xml": { "attribute": true }
            },
            "addPeriodPass": { "$ref": "#/definitions/AddPeriodPassDto" },
            "addAuxiliary": { "$ref": "#/definitions/AddAuxiliaryDto" },
            "addStoredRides": { "$ref": "#/definitions/AddStoredRidesDto" },
            "addEPurseContract": { "$ref": "#/definitions/AddEPurseContractDto" },
            "rechargeValue": { "$ref": "#/definitions/RechargeValueDto" },
            "removeContract": { "$ref": "#/definitions/RemoveContractDto" },
            "changeRiderType": { "$ref": "#/definitions/ChangeRiderTypeDto" }
          },
          "xml": { "name": "cardWaitingOperation" },
          "description": "Card waiting operation"
        }
      ]
    },
    "ChangeRiderTypeDto": {
      "type": "object",
      "properties": {
        "riderType": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      },
      "xml": { "name": "changeRiderType" }
    },
    "ContractBlockDto": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "instanceID": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "contractID": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      },
      "xml": { "name": "contractBlock" }
    },
    "ContractDataWrapperDto": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "contractID": {
          "type": "integer",
          "format": "int64"
        },
        "instanceID": { "type": "string" },
        "status": { "type": "string" },
        "type": {
          "type": "string",
          "xml": { "attribute": true }
        }
      }
    },
    "ContractUnblockDto": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "instanceID": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "contractID": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      },
      "xml": { "name": "contractUnBlock" }
    },
    "EPurseContractDto": {
      "allOf": [
        { "$ref": "#/definitions/ContractDto" },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "PeriodPassContractDto": {
      "allOf": [
        { "$ref": "#/definitions/ContractDto" },
        { "type": "object" }
      ]
    },
    "PreactivatedDto": {
      "type": "object",
      "properties": {
        "creationDate": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "expiryDate": {
          "type": "string",
          "xml": { "attribute": true }
        }
      }
    },
    "ReadOnlyDto": {
      "type": "object",
      "properties": {
        "uid": { "type": "string" },
        "type": { "type": "string" },
        "expiryTime": { "type": "string" },
        "alic": {
          "type": "integer",
          "format": "int32"
        },
        "alwc": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RechargeValueDto": {
      "type": "object",
      "properties": {
        "valueCents": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        }
      }
    },
    "RecreateCardDto": {
      "type": "object",
      "properties": { "card": { "$ref": "#/definitions/TransactionCardDto" } },
      "xml": { "name": "recreateCard" }
    },
    "RemoveContractDto": {
      "type": "object",
      "properties": {
        "instanceID": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "reasonCode": {
          "type": "integer",
          "format": "int32",
          "xml": { "attribute": true }
        },
        "contractID": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        }
      }
    },
    "StoredRidesContractDto": {
      "allOf": [
        { "$ref": "#/definitions/ContractDto" },
        { "type": "object" }
      ]
    },
    "TransactionCardDto": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "readOnly": { "$ref": "#/definitions/ReadOnlyDto" },
        "transactionCounter": {
          "type": "integer",
          "format": "int32"
        },
        "riderType": {
          "type": "integer",
          "format": "int32"
        },
        "blockStatus": { "$ref": "#/definitions/BlockStatusDto" },
        "storedValue": {
          "type": "integer",
          "format": "int32"
        },
        "contracts": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": {
            "xml": { "name": "contract" },
            "$ref": "#/definitions/ContractDataWrapperDto"
          }
        }
      }
    },
    "BlockDeviceOperationDto": {
      "allOf": [
        { "$ref": "#/definitions/DeviceActionDto" },
        {
          "type": "object",
          "properties": {},
          "xml": { "name": "blockDeviceOperation" }
        }
      ]
    },
    "DeviceActionDto": {
      "type": "object",
      "properties": {
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "deviceID": {
          "type": "string",
          "xml": { "attribute": true }
        }
      }
    },
    "DeviceActionListDto": {
      "type": "object",
      "properties": {
        "nextSequenceNumber": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "fileDateTime": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "deviceActions": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": { "$ref": "#/definitions/BlockDeviceOperationDto" }
        }
      },
      "xml": { "name": "actionList" }
    },
    "UnblockDeviceOperationDto": {
      "allOf": [
        { "$ref": "#/definitions/DeviceActionDto" },
        {
          "type": "object",
          "properties": {},
          "xml": { "name": "unblockDeviceOperation" }
        }
      ]
    },
    "ActionListDto": {
      "type": "object",
      "properties": {
        "nextSequenceNumber": {
          "type": "integer",
          "format": "int64",
          "xml": { "attribute": true }
        },
        "fileDateTime": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "cardActions": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": { "$ref": "#/definitions/CardWaitingOperationDto" }
        },
        "deviceActions": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": { "$ref": "#/definitions/BlockDeviceOperationDto" }
        }
      },
      "xml": { "name": "actionList" }
    },
    "EmailEndUserDto": {
      "type": "object",
      "properties": {
        "uid": { "type": "string" },
        "email": { "type": "string" }
      }
    },
    "AutoloadDto": {
      "type": "object",
      "properties": {
        "autoloadStoredValue": { "type": "boolean" },
        "reloadAmount": {
          "type": "integer",
          "format": "int32"
        },
        "autoloadPeriodPass": { "type": "boolean" }
      },
      "xml": { "name": "autoload" }
    },
    "AuxiliaryContractDto": {
      "allOf": [
        { "$ref": "#/definitions/ContractDto" },
        {
          "type": "object",
          "properties": { "reservedStorage": { "type": "string" } }
        }
      ]
    },
    "BlockStatus": {
      "type": "object",
      "properties": {
        "status": { "type": "string" },
        "lastChangeTime": { "type": "string" }
      },
      "xml": { "name": "blockStatus" }
    },
    "CardWPDto": {
      "type": "object",
      "properties": {
        "readOnly": { "$ref": "#/definitions/ReadOnly" },
        "transactionCounter": {
          "type": "integer",
          "format": "int64"
        },
        "riderType": {
          "type": "integer",
          "format": "int32"
        },
        "blockStatus": { "$ref": "#/definitions/BlockStatus" },
        "storedValue": {
          "type": "integer",
          "format": "int32"
        },
        "contracts": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContractDto" }
        },
        "issuingDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "cardHolderFirstName": { "type": "string" },
        "cardHolderLastName": { "type": "string" },
        "endUserUid": {
          "type": "integer",
          "format": "int64"
        },
        "endUserName": { "type": "string" },
        "autoload": { "$ref": "#/definitions/AutoloadDto" }
      }
    },
    "ContractDto": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        },
        "instanceId": { "type": "string" },
        "status": { "type": "string" },
        "reasonId": {
          "type": "integer",
          "format": "int32"
        },
        "reasonDescription": { "type": "string" },
        "productName": { "type": "string" }
      }
    },
    "ReadOnly": {
      "type": "object",
      "properties": {
        "uid": { "type": "string" },
        "type": { "type": "string" },
        "expiryDate": {
          "type": "string",
          "xml": { "name": "expiryTime" }
        },
        "alic": {
          "type": "integer",
          "format": "int32"
        },
        "alwc": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": { "name": "readOnly" }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "object": { "type": "object" },
        "contentType": { "$ref": "#/definitions/MediaType" },
        "contentDisposition": { "$ref": "#/definitions/ContentDisposition" },
        "dataHandler": { "$ref": "#/definitions/DataHandler" },
        "contentId": { "type": "string" }
      }
    },
    "CommandInfo": {
      "type": "object",
      "properties": {
        "commandName": { "type": "string" },
        "commandClass": { "type": "string" }
      }
    },
    "ContentDisposition": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "parameters": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "filename": { "type": "string" }
      }
    },
    "DataFlavor": {
      "type": "object",
      "properties": {
        "mimeType": { "type": "string" },
        "humanPresentableName": { "type": "string" },
        "defaultRepresentationClassAsString": { "type": "string" },
        "flavorJavaFileListType": { "type": "boolean" },
        "flavorRemoteObjectType": { "type": "boolean" },
        "flavorSerializedObjectType": { "type": "boolean" },
        "flavorTextType": { "type": "boolean" },
        "mimeTypeSerializedObject": { "type": "boolean" },
        "representationClassByteBuffer": { "type": "boolean" },
        "representationClassCharBuffer": { "type": "boolean" },
        "representationClassInputStream": { "type": "boolean" },
        "representationClassReader": { "type": "boolean" },
        "representationClassRemote": { "type": "boolean" },
        "representationClassSerializable": { "type": "boolean" },
        "primaryType": { "type": "string" },
        "subType": { "type": "string" }
      }
    },
    "DataHandler": {
      "type": "object",
      "properties": {
        "dataSource": { "$ref": "#/definitions/DataSource" },
        "name": { "type": "string" },
        "inputStream": { "$ref": "#/definitions/InputStream" },
        "content": { "type": "object" },
        "contentType": { "type": "string" },
        "outputStream": { "$ref": "#/definitions/OutputStream" },
        "allCommands": {
          "type": "array",
          "items": { "$ref": "#/definitions/CommandInfo" }
        },
        "preferredCommands": {
          "type": "array",
          "items": { "$ref": "#/definitions/CommandInfo" }
        },
        "transferDataFlavors": {
          "type": "array",
          "items": { "$ref": "#/definitions/DataFlavor" }
        }
      }
    },
    "DataSource": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "inputStream": { "$ref": "#/definitions/InputStream" },
        "contentType": { "type": "string" },
        "outputStream": { "$ref": "#/definitions/OutputStream" }
      }
    },
    "InputStream": { "type": "object" },
    "MediaType": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "subtype": { "type": "string" },
        "parameters": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "wildcardType": { "type": "boolean" },
        "wildcardSubtype": { "type": "boolean" }
      }
    },
    "MultipartBody": {
      "type": "object",
      "properties": {
        "type": { "$ref": "#/definitions/MediaType" },
        "allAttachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "childAttachments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "rootAttachment": { "$ref": "#/definitions/Attachment" }
      }
    },
    "OutputStream": { "type": "object" },
    "CardHolderDeviceInfoShort": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "deviceType": {
          "type": "string",
          "enum": [ "VEHICLE_VALIDATOR", "VEHICLE_GATE", "VEHICLE_TICKETING_MACHINE", "VEHICLE_DRIVER_CONSOLE", "VEHICLE_VENDING_MACHINE", "STATION_GATE", "STATION_VENDING_MACHINE", "STATION_STATUS_CHECKER", "OFFICE_PERSONALIZATION_STATION", "OFFICE_POS", "MOBILE_INSPECTION_DEVICE", "MOBILE_TICKETING_MACHINE", "MOBILE_VALIDATOR", "MOBILE_PHONE", "NETWORK_WEB_PORTAL", "CENTRAL_SYSTEM", "NETWORK_MOBILE_TICKETING_PORTAL" ]
        },
        "operatorRef": { "type": "string" },
        "operatorTypeExternalID": {
          "type": "integer",
          "format": "int32"
        },
        "operatorTypeName": { "type": "string" }
      },
      "xml": { "name": "deviceInfoShort" }
    },
    "CardHolderDto": {
      "type": "object",
      "properties": {
        "cardHolderId": {
          "type": "integer",
          "format": "int32",
          "xml": { "name": "id" }
        },
        "smartCardUId": { "type": "string" },
        "deviceInfoShort": { "$ref": "#/definitions/CardHolderDeviceInfoShort" },
        "cardHolderInfoBasic": { "$ref": "#/definitions/CardHolderInfoBasic" },
        "cardHolderInfoExtended": { "$ref": "#/definitions/CardHolderInfoExtended" }
      },
      "xml": { "name": "cardHolderEnvelope" }
    },
    "CardHolderInfoBasic": {
      "type": "object",
      "properties": {
        "cardHolderFirstName": { "type": "string" },
        "cardHolderLastName": { "type": "string" },
        "cardHolderDayOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "cardHolderGender": {
          "type": "string",
          "enum": [ "MALE", "FEMALE", "OTHER" ]
        },
        "cardHolderType": {
          "type": "string",
          "enum": [ "PERSONALIZED", "NON_PERSONALIZED", "ANONYMOUS", "AGENCY_EMPLOYEE", "EXTERNAL_DEVICE_OPERATOR", "PTO_EMPLOYEE", "EXTERNAL_EMPLOYEE" ]
        }
      },
      "xml": { "name": "cardHolderInfoBasic" }
    },
    "CardHolderInfoExtended": {
      "type": "object",
      "properties": {
        "cardHolderAddressLine1": { "type": "string" },
        "cardHolderAddressLine2": { "type": "string" },
        "cardHolderAddressLine3": { "type": "string" },
        "cardHolderCountryProvince": { "type": "string" },
        "cardHolderCity": { "type": "string" },
        "cardHolderPostalCode": { "type": "string" },
        "cardHolderCountryCode": { "type": "string" },
        "cardHolderIdentificationType": {
          "type": "string",
          "enum": [ "ID_CARD", "PASSPORT", "DRIVER_LICENCE", "OTHER" ]
        },
        "cardHolderIdentificationName": { "type": "string" },
        "cardHolderIdentificationExpiry": {
          "type": "string",
          "format": "date-time"
        },
        "cardHolderIdentificationId": { "type": "string" },
        "cardHolderPhoneNumber": { "type": "string" },
        "cardHolderEmployeeId": { "type": "string" },
        "cardHolderEmployeeTypeExternalId": { "type": "string" },
        "cardHolderEmployeeTypeName": { "type": "string" }
      },
      "xml": { "name": "cardHolderInfoExtended" }
    },
    "SmartCardBlockUnblockActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmartCardRechargeActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        },
        "valueCents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmartCardAddStoredRidesActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "fareCreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        },
        "rides": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmartCardAddPeriodPassActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "fareCreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmartCardContractBlockUnblockActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        },
        "instanceId": { "type": "string" }
      }
    },
    "SmartCardActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" }
      }
    },
    "CreateCardHolderDto": {
      "type": "object",
      "properties": {
        "deviceInfoShort": { "$ref": "#/definitions/CardHolderDeviceInfoShort" },
        "cardHolderInfoBasic": { "$ref": "#/definitions/CardHolderInfoBasic" },
        "cardHolderInfoExtended": { "$ref": "#/definitions/CardHolderInfoExtended" }
      },
      "xml": { "name": "cardHolderEnvelope" }
    },
    "CardReplacementDto": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "xml": { "attribute": true }
        },
        "readOnly": { "$ref": "#/definitions/ReadOnly" },
        "transactionCounter": {
          "type": "integer",
          "format": "int64"
        },
        "riderType": {
          "type": "integer",
          "format": "int32"
        },
        "blockStatus": { "$ref": "#/definitions/BlockStatus" },
        "storedValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "xml": { "name": "card" }
    },
    "CardReplacementListDto": {
      "type": "object",
      "properties": {
        "cards": {
          "type": "array",
          "xml": { "name": "card" },
          "items": {
            "xml": { "name": "card" },
            "$ref": "#/definitions/CardReplacementDto"
          }
        }
      },
      "xml": { "name": "cardReplacementList" }
    },
    "SmartCardAddEpurseContractActionDto": {
      "type": "object",
      "properties": {
        "actionSourceType": {
          "type": "string",
          "enum": [ "WP", "CS", "POS", "SCR", "VAL" ]
        },
        "deviceId": { "type": "string" },
        "fareCreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reasonCode": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PurchaseHistoryDto": {
      "type": "object",
      "properties": {
        "deviceType": { "type": "string" },
        "deviceId": { "type": "string" },
        "deviceTransactionNumber": {
          "type": "integer",
          "format": "int64"
        },
        "cardTransactionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "productType": { "type": "string" },
        "cost": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmartCardRideDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "cardTransactionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "contractCategory": { "type": "string" },
        "remainingValue": {
          "type": "integer",
          "format": "int32"
        },
        "remainingRides": {
          "type": "integer",
          "format": "int32"
        },
        "remainingDays": {
          "type": "integer",
          "format": "int32"
        },
        "routeName": { "type": "string" },
        "busId": { "type": "string" },
        "actualBoardingStopCode": { "type": "string" },
        "actualAlightingStopCode": { "type": "string" }
      }
    },
    "CardBlockReasonDto": {
      "type": "object",
      "properties": {
        "reasonId": {
          "type": "integer",
          "format": "int32"
        },
        "reasonSummary": { "type": "string" }
      }
    },
    "AutoLoadListStoredValueDto": {
      "type": "object",
      "properties": {
        "thresholdValue": {
          "type": "integer",
          "format": "int32"
        },
        "cards": {
          "type": "array",
          "items": { "$ref": "#/definitions/AutoLoadStoredValueDto" }
        }
      }
    },
    "AutoLoadStoredValueDto": {
      "type": "object",
      "properties": {
        "cardUid": { "type": "string" },
        "storedValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AutoLoadListPeriodPassDto": {
      "type": "object",
      "properties": {
        "thresholdRemainingDays": {
          "type": "integer",
          "format": "int32"
        },
        "cards": {
          "type": "array",
          "items": { "$ref": "#/definitions/AutoLoadPeriodPassDto" }
        }
      }
    },
    "AutoLoadPeriodPassDto": {
      "type": "object",
      "properties": {
        "cardUid": { "type": "string" },
        "contractId": {
          "type": "integer",
          "format": "int64"
        },
        "instanceId": { "type": "string" },
        "expirationDate": { "type": "string" }
      }
    },
    "CardCostDto": {
      "type": "object",
      "properties": {
        "newCardCost": {
          "type": "integer",
          "format": "int32"
        },
        "replacementCardCost": {
          "type": "integer",
          "format": "int32"
        },
        "minimumBalance": {
          "type": "integer",
          "format": "int32"
        },
        "depositAmount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountDto": {
      "type": "object",
      "required": [ "accountType", "city", "dayOfBirth", "firstName", "gender", "isBusinessOrganization", "lastName", "postalCode", "riderTypeExternalId", "state" ],
      "properties": {
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "dayOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "gender": { "type": "string" },
        "accountType": {
          "type": "string",
          "enum": [ "ANONYMOUS", "REGULAR", "CONCESSION" ]
        },
        "isBusinessOrganization": { "type": "boolean" },
        "businessOrganizationName": { "type": "string" },
        "businessOrganizationExternalId": { "type": "string" },
        "addressLine1": { "type": "string" },
        "addressLine2": { "type": "string" },
        "addressLine3": { "type": "string" },
        "city": { "type": "string" },
        "postalCode": { "type": "string" },
        "state": { "type": "string" },
        "riderTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "concessionExpirationTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "identificationId": { "type": "string" },
        "identificationType": { "type": "string" },
        "accountExternalId": { "type": "string" },
        "emailAddress": { "type": "string" },
        "phoneNumber": {
          "type": "string",
          "description": "E.164 international phone number formatting "
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateAccountDto": {
      "type": "object",
      "required": [ "accountType", "city", "dayOfBirth", "firstName", "gender", "isBusinessOrganization", "lastName", "postalCode", "riderTypeExternalId", "state" ],
      "properties": {
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "dayOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "gender": { "type": "string" },
        "accountType": {
          "type": "string",
          "enum": [ "ANONYMOUS", "REGULAR", "CONCESSION" ]
        },
        "isBusinessOrganization": { "type": "boolean" },
        "businessOrganizationName": { "type": "string" },
        "businessOrganizationExternalId": { "type": "string" },
        "addressLine1": { "type": "string" },
        "addressLine2": { "type": "string" },
        "addressLine3": { "type": "string" },
        "city": { "type": "string" },
        "postalCode": { "type": "string" },
        "state": { "type": "string" },
        "riderTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "concessionExpirationTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "identificationId": { "type": "string" },
        "identificationType": { "type": "string" },
        "accountExternalId": { "type": "string" },
        "emailAddress": { "type": "string" },
        "phoneNumber": {
          "type": "string",
          "description": "E.164 international phone number formatting "
        }
      }
    },
    "UpdateAccountDto": {
      "type": "object",
      "required": [ "accountType", "city", "dayOfBirth", "firstName", "gender", "isBusinessOrganization", "lastName", "postalCode", "riderTypeExternalId", "state" ],
      "properties": {
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "dayOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "gender": { "type": "string" },
        "accountType": {
          "type": "string",
          "enum": [ "ANONYMOUS", "REGULAR", "CONCESSION" ]
        },
        "isBusinessOrganization": { "type": "boolean" },
        "businessOrganizationName": { "type": "string" },
        "businessOrganizationExternalId": { "type": "string" },
        "addressLine1": { "type": "string" },
        "addressLine2": { "type": "string" },
        "addressLine3": { "type": "string" },
        "city": { "type": "string" },
        "postalCode": { "type": "string" },
        "state": { "type": "string" },
        "riderTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "concessionExpirationTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "identificationId": { "type": "string" },
        "identificationType": { "type": "string" }
      }
    },
    "TransactionUploadFileStatusDto": {
      "type": "object",
      "properties": {
        "fileName": { "type": "string" },
        "error": { "type": "string" }
      }
    },
    "TransactionUploadResponseDto": {
      "type": "object",
      "properties": {
        "error": { "type": "string" },
        "files": {
          "type": "array",
          "items": { "$ref": "#/definitions/TransactionUploadFileStatusDto" }
        }
      },
      "xml": { "name": "uploadStatus" }
    },
    "CheckTransactionFilesStatusResponseDto": {
      "type": "object",
      "properties": {
        "file": {
          "type": "array",
          "items": { "$ref": "#/definitions/TransactionFileStatusDto" }
        }
      },
      "xml": { "name": "transactionFiles" }
    },
    "TransactionFileStatusDto": {
      "type": "object",
      "properties": {
        "fileName": { "type": "string" },
        "status": {
          "type": "string",
          "enum": [ "Ok", "Error", "Duplicate", "NotYetProcessed", "UnknownFile" ]
        },
        "debugErrorDescription": { "type": "string" }
      }
    },
    "CheckStatusRequestDto": {
      "type": "object",
      "properties": {
        "file": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "xml": { "name": "transactionFiles" }
    },
    "DeviceDto": {
      "type": "object",
      "properties": { "deviceId": { "type": "string" } },
      "xml": { "name": "device" }
    },
    "ReportDistributionInstallStatusDto": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "distributionVersion": { "type": "string" },
        "upgradeState": {
          "type": "string",
          "enum": [ "STARTED_DOWNLOAD", "FINISHED_DOWNLOAD", "FINISHED_UPGRADE", "SUPERSEDED" ]
        }
      },
      "xml": { "name": "reportDistributionStatus" }
    },
    "WaysideAssignmentDto": {
      "type": "object",
      "properties": {
        "terminalId": {
          "type": "integer",
          "format": "int32"
        },
        "deviceSharedId": { "type": "string" },
        "locationName": { "type": "string" },
        "locationReferenceNumber": { "type": "string" },
        "organizationId": { "type": "string" },
        "organizationName": { "type": "string" }
      },
      "xml": { "name": "deviceAssignments" }
    },
    "HeartbeatResponseDto": {
      "type": "object",
      "properties": {
        "distributionVersion": { "type": "string" },
        "distributionDownloadUrl": {
          "type": "string",
          "description": "The URL to download the distribution. HTTP resume is supported. You must prepend the server address, eg this is '/media/dist...' -- you must prepend 'http://...'. If you add '.nfo' to this URL, you'll get a file containing MD5 and file length for the distribution file."
        },
        "actionListVersion": { "type": "string" },
        "blockStatus": {
          "type": "string",
          "enum": [ "Block", "Unblock" ]
        },
        "tng": { "$ref": "#/definitions/TngHeartbeatResponseExtensionDto" }
      },
      "xml": { "name": "heartbeatResponse" }
    },
    "TngHeartbeatResponseExtensionDto": {
      "type": "object",
      "properties": {
        "tngSmartCardBlockActionListVersion": { "type": "string" },
        "tngSmartCardBlockActionListMasterFileUrl": {
          "type": "string",
          "description": "Direct URL for the smart card block action list master file, with possibility of resuming the download. If you append .nfo to the URL you can also get the MD5 and size of the master file."
        },
        "tngBlockedSmartCardListVersion": { "type": "string" },
        "tngBlockedDeviceListVersion": { "type": "string" },
        "tngValidSmartCardManufacturingIdRangeVersion": { "type": "string" },
        "tngValidServiceProviderListVersion": { "type": "string" }
      }
    },
    "AlarmStatesDto": {
      "type": "object",
      "properties": {
        "alarmState": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "HeartbeatDto": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "distributionVersion": { "type": "string" },
        "alarmStates": { "$ref": "#/definitions/AlarmStatesDto" },
        "blockStatus": {
          "type": "string",
          "enum": [ "Block", "Unblock" ]
        },
        "tng": { "$ref": "#/definitions/TngHeartbeatExtensionDto" },
        "details": { "type": "object" }
      },
      "xml": { "name": "heartbeat" }
    },
    "TngHeartbeatExtensionDto": {
      "type": "object",
      "properties": {
        "runningTngSmartCardBlockActionListVersion": { "type": "string" },
        "runningTngBlockedSmartCardListVersion": { "type": "string" },
        "runningTngBlockedDeviceListVersion": { "type": "string" },
        "runningTngValidSmartCardManufacturingIdRangeVersion": { "type": "string" },
        "runningTngValidServiceProviderListVersion": { "type": "string" }
      }
    },
    "HeartbeatDtoMtmHeartbeatDetailsDto": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "distributionVersion": { "type": "string" },
        "alarmStates": { "$ref": "#/definitions/AlarmStatesDto" },
        "blockStatus": {
          "type": "string",
          "enum": [ "Block", "Unblock" ]
        },
        "tng": { "$ref": "#/definitions/TngHeartbeatExtensionDto" },
        "details": { "type": "object" }
      },
      "xml": { "name": "heartbeat" }
    },
    "HeartbeatDtoVoid": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "distributionVersion": { "type": "string" },
        "alarmStates": { "$ref": "#/definitions/AlarmStatesDto" },
        "blockStatus": {
          "type": "string",
          "enum": [ "Block", "Unblock" ]
        },
        "tng": { "$ref": "#/definitions/TngHeartbeatExtensionDto" },
        "details": { "type": "object" }
      },
      "xml": { "name": "heartbeat" }
    },
    "TransactionErrorDto": {
      "type": "object",
      "properties": {
        "deviceId": { "type": "string" },
        "deviceCounter": {
          "type": "integer",
          "format": "int64"
        },
        "processingStartedTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "transactionTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "error": { "type": "string" }
      }
    },
    "TransactionErrorListDto": {
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": { "$ref": "#/definitions/TransactionErrorDto" }
        }
      },
      "xml": { "name": "errorList" }
    },
    "ReasonConfigurationIntegrationDto": {
      "type": "object",
      "properties": {
        "lastChanged": {
          "type": "string",
          "format": "date-time"
        },
        "reasons": {
          "type": "array",
          "items": { "$ref": "#/definitions/ReasonIntegrationDto" }
        },
        "reasonTypes": {
          "type": "array",
          "items": { "$ref": "#/definitions/ReasonTypeIntegrationDto" }
        }
      }
    },
    "ReasonIntegrationDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "reasonTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "isBuiltin": { "type": "boolean" },
        "name": { "type": "string" },
        "visibleForDeviceTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [ "VEHICLE_VALIDATOR", "VEHICLE_GATE", "VEHICLE_TICKETING_MACHINE", "VEHICLE_DRIVER_CONSOLE", "VEHICLE_VENDING_MACHINE", "STATION_GATE", "STATION_VENDING_MACHINE", "STATION_STATUS_CHECKER", "OFFICE_PERSONALIZATION_STATION", "OFFICE_POS", "MOBILE_INSPECTION_DEVICE", "MOBILE_TICKETING_MACHINE", "MOBILE_VALIDATOR", "MOBILE_PHONE", "NETWORK_WEB_PORTAL", "CENTRAL_SYSTEM", "NETWORK_MOBILE_TICKETING_PORTAL" ]
          }
        }
      }
    },
    "ReasonTypeIntegrationDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": { "type": "string" }
      }
    },
    "DeviceInformationDto": {
      "type": "object",
      "properties": {
        "terminalId": {
          "type": "integer",
          "format": "int32"
        },
        "terminalTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "deviceSharedId": { "type": "string" },
        "securityElementId": { "type": "string" },
        "securityElementTransactionCounter": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FinancialSaleFareItemDetailDto": {
      "type": "object",
      "properties": {
        "activityType": {
          "type": "string",
          "enum": [ "ISSUE", "ISSUE_REVERSAL", "EXTENSION_ISSUE", "VALIDATION", "VALIDATION_REVERSAL", "TALLY_COUNTING", "ISSUE_AND_VALIDATION", "ISSUE_AND_VALIDATION_REVERSAL", "PENALTY_ISSUE", "PENALTY_ISSUE_AND_PAYMENT", "PENALTY_PAYMENT", "INSPECTION", "CREDIT", "DEBIT", "ACTION_EXECUTED", "MANAGE_SMART_CARD" ]
        },
        "currencyCode": {
          "type": "string",
          "enum": [ "USD", "EUR", "INR", "ILS", "MYR", "OMR", "CZK", "GBP", "JPY", "CHF", "HRK", "RUB", "AUD", "CAD", "CNY", "HKD", "MXN" ]
        },
        "fareItemCashCollected": {
          "type": "integer",
          "format": "int32"
        },
        "fareItemCategory": {
          "type": "string",
          "enum": [ "FARE_PRODUCT", "FARE_THIRD_PARTY_SALE_ITEM", "FARE_SINGLE_RIDE", "FARE_SINGLE_RIDE_GROUP", "FARE_TALLY_ITEM", "FARE_PENALTY_ITEM", "FARE_EPURSE", "FARE_JOURNEY", "FARE_JOURNEY_GROUP", "INIT_SMART_CARD", "HOTLIST_SMART_CARD", "FARE_FEE_ITEM", "FARE_DEPOSIT_ITEM", "BLOCK_TYPE" ]
        },
        "fareItemExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "fareItemName": { "type": "string" },
        "fareItemRevenueCollected": {
          "type": "integer",
          "format": "int32"
        },
        "noOfFareItems": {
          "type": "integer",
          "format": "int32"
        },
        "passengerRiderTypeExternalID": {
          "type": "integer",
          "format": "int32"
        },
        "fareItemType": {
          "type": "string",
          "enum": [ "PRODUCT_TICKET", "PRODUCT_UPGRADE_TICKET", "PENATLTY_TICKET", "SINGLE_RIDE_TICKET", "SINGLE_RIDE_GROUP_TICKET", "EXTENSION_SINGLE_RIDE_TICKET", "EXTENSION_SINGLE_RIDE_MOBILE_TICKET", "PARDON_SINGLE_RIDE_TICKET", "SINGLE_JOURNEY_TICKET", "SINGLE_JOURNEY_UPGRADE_TICKET", "SINGLE_RIDE_MOBILE_TICKET", "THIRD_PARTY_SALE_TICKET", "PERSON_TALLIES", "NON_PERSON_TALLIES", "CREDIT_EPURSE_SMART_CARD", "CREDIT_BONUS_EPURSE_SMART_CARD", "REFUND_EPURSE_SMART_CARD", "JOURNEY_SMART_CARD", "JOURNEY_GROUP_SMART_CARD", "ISSUE_SMART_CARD", "RE_ISSUE_SMART_CARD", "ASSIGN_RIDER_TYPE_SMART_CARD", "CREATE_EPURSE_SMART_CARD", "BLOCK_SMART_CARD", "UNBLOCK_SMART_CARD", "PRODUCT_SMART_CARD", "PRODUCT_UPGRADE_SMART_CARD", "PENATLTY_SMART_CARD", "PENALTY_SMART_CARD", "CREDIT_DEPOSIT_SMART_CARD", "REFUND_DEPOSIT_SMART_CARD", "DEBIT_EPURSE_SMART_CARD" ]
        },
        "passengerRiderTypeName": { "type": "string" }
      }
    },
    "FinancialStockStatusInformationDto": {
      "type": "object",
      "properties": {
        "stockName": { "type": "string" },
        "stockQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "stockType": {
          "type": "string",
          "enum": [ "SMART_CARD", "PRINTER_PAPER_ROLL" ]
        },
        "stockUnit": { "type": "string" }
      }
    },
    "FinancialSummaryDto": {
      "type": "object",
      "properties": {
        "deviceInformation": { "$ref": "#/definitions/DeviceInformationDto" },
        "blockRef": { "type": "string" },
        "driverName": { "type": "string" },
        "driverRef": { "type": "string" },
        "latitude": {
          "type": "integer",
          "format": "int32"
        },
        "longitude": {
          "type": "integer",
          "format": "int32"
        },
        "pattern": { "type": "string" },
        "routeDestination": { "type": "string" },
        "routeExternalId": { "type": "string" },
        "routeName": { "type": "string" },
        "routeStatus": {
          "type": "string",
          "enum": [ "UNKNOWN", "ON_ROUTE", "OFF_ROUTE" ]
        },
        "routeVariant": { "type": "string" },
        "routeVersion": { "type": "string" },
        "runRef": { "type": "string" },
        "stopCode": { "type": "string" },
        "stopName": { "type": "string" },
        "tripId": { "type": "string" },
        "vehicleRef": { "type": "string" },
        "deviceComponentId": { "type": "string" },
        "deviceComponentType": {
          "type": "string",
          "enum": [ "SMART_CARD_READER", "ENGRAVING_MACHINE", "TICKET_PRINTER", "QR_CODE_READER", "MAIN_CPU_BOARD", "CREDIT_CARD_READER", "SAM", "RADIO_3_G", "CAMERA", "LASER_PRINTER", "DOCUMENT_SCANNER", "SMART_CARD_PRINTER", "AUDIO_DEVICE", "DISPLAY", "CUSTOMER_DISPLAY" ]
        },
        "deviceId": { "type": "string" },
        "deviceTransactionCounter": {
          "type": "integer",
          "format": "int64"
        },
        "deviceType": {
          "type": "string",
          "enum": [ "VEHICLE_VALIDATOR", "VEHICLE_GATE", "VEHICLE_TICKETING_MACHINE", "VEHICLE_DRIVER_CONSOLE", "VEHICLE_VENDING_MACHINE", "STATION_GATE", "STATION_VENDING_MACHINE", "STATION_STATUS_CHECKER", "OFFICE_PERSONALIZATION_STATION", "OFFICE_POS", "MOBILE_INSPECTION_DEVICE", "MOBILE_TICKETING_MACHINE", "MOBILE_VALIDATOR", "MOBILE_PHONE", "NETWORK_WEB_PORTAL", "CENTRAL_SYSTEM", "NETWORK_MOBILE_TICKETING_PORTAL" ]
        },
        "deviceVersion": { "type": "string" },
        "locationExternalId": { "type": "string" },
        "locationName": { "type": "string" },
        "operationMode": {
          "type": "string",
          "enum": [ "ISSUING_VALIDATION", "INSPECTION", "VALIDATION", "ISSUING", "MAINTENANCE" ]
        },
        "operatorRef": { "type": "string" },
        "operatorTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "operatorTypeName": { "type": "string" },
        "organizationExternalId": { "type": "string" },
        "organizationName": { "type": "string" },
        "publicTransportOrganizationRef": { "type": "string" },
        "revenueMode": {
          "type": "string",
          "enum": [ "IN_SERVICE", "REVENUE_TEST", "NON_REVENUE_TEST" ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "currencyCode": {
          "type": "string",
          "enum": [ "USD", "EUR", "INR", "ILS", "MYR", "OMR", "CZK", "GBP", "JPY", "CHF", "HRK", "RUB", "AUD", "CAD", "CNY", "HKD", "MXN" ]
        },
        "fareSystemModel": {
          "type": "string",
          "enum": [ "ROUTE_TYPE_FLAT", "DISTANCE_BASED", "DISTANCE_BASED_STAGED", "ZONES", "POLYGONS" ]
        },
        "routeSystemType": {
          "type": "string",
          "enum": [ "OPEN", "CLOSED" ]
        },
        "routeTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "routeTypeName": { "type": "string" },
        "summaryActivityType": {
          "type": "string",
          "enum": [ "OPEN_SUMMARY", "CLOSE_SUMMARY" ]
        },
        "summaryCashCollected": {
          "type": "integer",
          "format": "int32"
        },
        "summaryCloseOperatorRef": { "type": "string" },
        "summaryCloseOperatorTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "summaryCloseOperatorTypeName": { "type": "string" },
        "summaryCloseTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "summaryOpenOperatorRef": { "type": "string" },
        "summaryOpenOperatorTypeExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "summaryOpenOperatorTypeName": { "type": "string" },
        "summaryOpenTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "summaryReferenceByDevice": { "type": "string" },
        "summaryReferenceByOperator": { "type": "string" },
        "summaryType": {
          "type": "string",
          "enum": [ "ROUTE_EXECUTION", "WORKING_INTERVAL", "TASK_EXECUTION" ]
        },
        "summaryRevenueCollected": {
          "type": "integer",
          "format": "int32"
        },
        "saleFareItemDetails": {
          "type": "array",
          "items": { "$ref": "#/definitions/FinancialSaleFareItemDetailDto" }
        },
        "summaryPaymentInstrumentItemDetails": {
          "type": "array",
          "items": { "$ref": "#/definitions/FinancialSummaryPaymentInstrumentItemDetailDto" }
        },
        "stockStatusInformations": {
          "type": "array",
          "items": { "$ref": "#/definitions/FinancialStockStatusInformationDto" }
        }
      }
    },
    "FinancialSummaryPaymentInstrumentItemDetailDto": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "enum": [ "USD", "EUR", "INR", "ILS", "MYR", "OMR", "CZK", "GBP", "JPY", "CHF", "HRK", "RUB", "AUD", "CAD", "CNY", "HKD", "MXN" ]
        },
        "paymentInstrument": {
          "type": "string",
          "enum": [ "PREPAY_CASH", "NONE", "PREPAY_CREDIT_CARD", "PREPAY_DEBIT_CARD", "PREPAY_EMV_CREDIT_CARD", "PREPAY_EMV_DEBIT_CARD", "PREPAYT_BANK_TO_BANK", "PREPAY_SMART_CARD_E_PURSE", "POSTPAYMENT" ]
        },
        "paymentInstrumentRevenueCollected": {
          "type": "integer",
          "format": "int32"
        },
        "paymentInstrumentTransactions": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OnBoardAssignmentDto": {
      "type": "object",
      "properties": {
        "terminalId": {
          "type": "integer",
          "format": "int32"
        },
        "deviceSharedId": { "type": "string" },
        "assetRegistration": { "type": "string" },
        "assetInternalNumber": { "type": "string" }
      },
      "xml": { "name": "deviceAssignments" }
    },
    "UnassignDeviceResponseDto": {
      "type": "object",
      "properties": {
        "assetId": { "type": "string" },
        "deviceId": { "type": "string" }
      }
    },
    "List": {
      "type": "object",
      "properties": {
        "empty": { "type": "boolean" },
        "async": { "type": "boolean" },
        "traversableAgain": { "type": "boolean" },
        "lazy": { "type": "boolean" },
        "sequential": { "type": "boolean" },
        "singleValued": { "type": "boolean" },
        "ordered": { "type": "boolean" },
        "distinct": { "type": "boolean" },
        "orNull": { "type": "object" },
        "memoized": { "type": "boolean" }
      }
    },
    "ListUnassignDeviceDto": {
      "type": "object",
      "properties": {
        "empty": { "type": "boolean" },
        "async": { "type": "boolean" },
        "traversableAgain": { "type": "boolean" },
        "lazy": { "type": "boolean" },
        "sequential": { "type": "boolean" },
        "singleValued": { "type": "boolean" },
        "ordered": { "type": "boolean" },
        "distinct": { "type": "boolean" },
        "orNull": { "$ref": "#/definitions/UnassignDeviceDto" },
        "memoized": { "type": "boolean" }
      }
    },
    "UnassignDeviceDto": {
      "type": "object",
      "required": [ "assetId", "deviceIds" ],
      "properties": {
        "assetId": {
          "type": "string",
          "description": "asset to unassign from"
        },
        "deviceIds": {
          "type": "array",
          "description": "list of devices to unassign from asset",
          "items": { "type": "string" }
        }
      }
    },
    "EmployeeInfoDto": {
      "type": "object",
      "required": [ "employeeRoleId", "employeeRoleName", "firstLogin", "firstName", "id", "lastName", "locked", "loginAttempts" ],
      "properties": {
        "id": {
          "type": "string",
          "description": "employee id to be used for subsequent service calls and sending transactions"
        },
        "smartCardId": {
          "type": "string",
          "description": "employee smart card ID if it's been set"
        },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "employeeRoleId": {
          "type": "integer",
          "format": "int32"
        },
        "employeeRoleName": { "type": "string" },
        "firstLogin": { "type": "boolean" },
        "loginAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "locked": { "type": "boolean" }
      }
    },
    "LoginRequestDto": {
      "type": "object",
      "required": [ "id", "password" ],
      "properties": {
        "id": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "IntegrationEmployeeDto": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "smartCardId": { "type": "string" },
        "externalReference": { "type": "string" },
        "shortNumber": {
          "type": "integer",
          "format": "int32"
        },
        "employeeRoleExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "employeeRoleExternalReference": { "type": "string" },
        "employeeRoleName": { "type": "string" },
        "companyName": { "type": "string" },
        "type": { "type": "string" },
        "loginPassword": { "type": "string" }
      }
    },
    "EmployeesResponseDto": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "IntegrationEmployeesDto": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": { "$ref": "#/definitions/IntegrationEmployeeDto" }
        }
      }
    },
    "EmployeeChangePasswordIntegrationDto": {
      "type": "object",
      "required": [ "newPassword", "password" ],
      "properties": {
        "password": { "type": "string" },
        "newPassword": { "type": "string" }
      }
    },
    "FineDto": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "priceCents": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [ "Pending", "Paid" ]
        },
        "riderId": { "type": "string" },
        "riderName": { "type": "string" },
        "reasonId": {
          "type": "integer",
          "format": "int32"
        },
        "fineProductId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FinePaymentDto": {
      "type": "object",
      "required": [ "paymentType", "source", "timestamp" ],
      "properties": {
        "source": {
          "type": "string",
          "description": "source of payment (only \"internet\" currently)"
        },
        "paymentType": {
          "type": "string",
          "description": "cash, creditCard, ..."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "payment time"
        }
      }
    },
    "InspectorIntegrationDto": {
      "type": "object",
      "required": [ "employeeRoleId", "employeeRoleName", "firstLogin", "firstName", "id", "lastName" ],
      "properties": {
        "id": {
          "type": "string",
          "description": "inspector (or operator) id to be used when sending transactions"
        },
        "smartCardId": {
          "type": "string",
          "description": "inspector smart card ID if it's been set"
        },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "firstLogin": { "type": "boolean" },
        "employeeRoleId": {
          "type": "integer",
          "format": "int32"
        },
        "employeeRoleName": { "type": "string" }
      }
    },
    "InspectorLoginIntegrationDto": {
      "type": "object",
      "required": [ "password" ],
      "properties": { "password": { "type": "string" } }
    },
    "MediaUploadDto": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "id of device uploading the media"
        },
        "inspectionId": {
          "type": "string",
          "description": "(same as taskExecutionId)"
        },
        "inspectionEventId": {
          "type": "string",
          "description": "optionally link media to an event"
        },
        "fineId": {
          "type": "string",
          "description": "optionally link media to a fine"
        },
        "mediaType": {
          "type": "string",
          "description": "mime type of uploaded media (image/jpeg, audio/?)"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "timestamp when media was captured"
        },
        "comment": {
          "type": "string",
          "description": "optional inspector comment when media captured"
        }
      }
    },
    "InspectorAssignedTasksIntegrationDto": {
      "type": "object",
      "required": [ "additionalInstructions", "description", "dueDate", "estimatedDuration", "id", "isDone", "plannedDate", "route", "routeType", "routeTypeId", "taskTypeId" ],
      "properties": {
        "id": {
          "type": "string",
          "description": "id of task to be used as taskId when sending task related transactions"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "plannedDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": { "type": "string" },
        "estimatedDuration": {
          "type": "integer",
          "format": "int32",
          "description": "in hours"
        },
        "additionalInstructions": { "type": "string" },
        "taskTypeId": {
          "type": "string",
          "description": "id of task type - one of task types defined in AfcInspectionTaskType, currently: ridersInspection, busInspection or stationInspection"
        },
        "route": {
          "type": "string",
          "description": "route id as defined for task"
        },
        "routeTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "route type id as defined for task"
        },
        "routeType": {
          "type": "string",
          "description": "route type as defined for task"
        },
        "isDone": {
          "type": "boolean",
          "description": "true when the task has been executed already"
        }
      }
    },
    "InspectionSummaryIntegrationDto": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "noTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noCompletedTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noRiderInspectionTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noRiderInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noBusInspectionTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noBusInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noStationInspectionTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noStationInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noReviewInspectionTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noReviewInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noOtherInspectionTasks": {
          "type": "integer",
          "format": "int32"
        },
        "noOtherInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noTicketsInspected": {
          "type": "integer",
          "format": "int32"
        },
        "noFailedTicketInspections": {
          "type": "integer",
          "format": "int32"
        },
        "noFines": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InspectorChangePasswordIntegrationDto": {
      "type": "object",
      "required": [ "newPassword", "password" ],
      "properties": {
        "password": { "type": "string" },
        "newPassword": { "type": "string" }
      }
    },
    "InspectionIntegrationDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "inspection Id as defined by the device"
        },
        "taskId": {
          "type": "string",
          "description": "task Id if inspection performed as task execution (and not ad hoc)"
        },
        "inspectionStart": {
          "type": "string",
          "format": "date-time",
          "description": "start timestamp"
        },
        "inspectionEnd": {
          "type": "string",
          "format": "date-time",
          "description": "end timestamp"
        },
        "routeId": {
          "type": "string",
          "description": "inspection route Id"
        },
        "routeTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "inspection route type Id"
        },
        "routeTypeName": {
          "type": "string",
          "description": "inspection route type name"
        },
        "inspectionType": {
          "type": "string",
          "description": "inspection type",
          "enum": [ "RIDERS_INSPECTION", "BUS_INSPECTION", "STATION_INSPECTION", "REVIEW", "OTHER" ]
        }
      }
    },
    "InspectorAssignmentsIntegrationDto": {
      "type": "object",
      "required": [ "assignedTasks", "inspections" ],
      "properties": {
        "assignedTasks": {
          "type": "array",
          "description": "list of assigned tasks planned from today on",
          "items": { "$ref": "#/definitions/InspectorAssignedTasksIntegrationDto" }
        },
        "inspections": {
          "type": "array",
          "description": "list of inspections finished today",
          "items": { "$ref": "#/definitions/InspectionIntegrationDto" }
        }
      }
    },
    "TngBlacklistResponse": {
      "type": "object",
      "properties": {
        "error": { "type": "string" },
        "tngVersion": { "type": "string" }
      },
      "xml": { "name": "tngBlacklistResponse" }
    }
  }
}